Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2011-09-19T16:23:11+08:00

====== VIM notes ======
Created 星期一 19 九月 2011

===== 1 命令 =====
* :%s/from/to/g
	% 标识了该命令执行的行号的范围，即“当前文件的所有行”。此外，你也可以指定执行的行号的范围，例如 0,10 表示从第 0 行到第 10 行。:s 表示“替换”命令。'from' 和 'to' 分别是查找和替换的文本。g 指明如果 'from' 多次出现，它会全部替换。
* :0,10s/from/to/gc
	新的选项 c 意思是在每次替换之前都要 'c'onfirmation 一下。

* 使用ctags
	ctags的使用特别简单，首先进入源码目录下，打开vim编辑器，在命令模式下输入：tag tag_name 按回车即可。通常tag_name可以是结构体名称，函数名称，宏变量名称等。通常输入上述命令后，因为找到的标签并不唯一，所以还需要配合使用下述命令：
	tfirst：跳至第一个
	tnext：跳至下一个
	tlast：跳至最后一个
* 使用cscope:
	如果想找到request_irq函数的定义处代码，即可使用这个命令：cs find g request_irq来进行查找。

* 通常是先通过cscope大致定位到头文件，再通过ctags在该头文件中详细定位。

* Ctrl+w [*]: h 向左移动光标；j 向下移动光标；k 向上移动光标；l 向右移动光标；w 自由移动光标；n 新建窗口。
* :sp, :vs分别是水平分割和垂直分割窗口。
* /hello然后按下回车键。Vim会搜索这个词，并跳转到第一次出现的地方。
* I(大写的i)：把光标移动到行首并且插入一个词。
* a：把光标置于当前位置之后并进入插入模式。
* A(大写的a)：行尾附加文字。
* o:在当前行之下开始一新行。O:在当前行之上开始一新行。
* s：删除光标所在字符，并进入插入模式，进行编辑（替换）。S：对整行执行替换操作。
* r：功能上类似s，但直接在正常模式下执行。R：替换后续字符。
* v和V：进入可视化模式，通过方向键以字符或行为单位选取内容。
* w：想移动光标到下一个词？按w。  （详情参见:help word-motions）
* e：移动到下一个单词的尾部。
* b：回退到上一个单词的尾部。
* }：想移动到下一段？按}。
* {：移动到上一段。
* (：移动到上一句。
* )：移动到下一句。
* 3fh：想移动到字母'h'第三次出现的位置？按3fh。
* 35j：想向下移动35行？按35j。
* Ctrl-o：在光标移动之后，想跳回到上一个位置？按ctrl-o。
* ^：‘Home’，移动到行首。
* $：‘End’，移动到行尾。
* Ctrl-b：‘Page Up’，向上滚动一屏。
* Ctrl-f：‘Page Down’，向下滚动一屏。
* 跳转的绝对行数+G：跳转到绝对行数，单独输入G表示跳转到最后一行。
* H：跳到当前窗口最高的地方（'h'igh，第一行）
* M：跳到当前窗口的中央（'m'iddle）
* L：跳到当前窗口最低的地方（'l'ow，最后一行）
* shift + k：把光标定位到系统函数，比如sprintf ，按住shitf + k
* @@：重复执行上一次正常模式下的命令
* n和N：下一个（上一个）符合的pattern

===== 2 设置 =====



===== 3 注意 =====
* 正常模式下的所有命令应当以回车键为结尾，告知 Vim 命令已经输入完毕。
